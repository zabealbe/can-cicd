# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run all

on:
  workflow_dispatch:
  push:
    paths:
    - 'config/**'
    branches:
      - master

jobs:
  run-all:
    runs-on: ubuntu-latest
    env:
      INCLUDES_VERSION: 0
    steps:
    - uses: actions/setup-python@v2
      name: Set up Python 3.8
      with:
        python-version: 3.8
    - uses: actions/checkout@v2
    - name: Run ID generator
      run: |
        cd id-generator
        pip install -r requirements.txt
        python main.py
        mkdir -p /tmp/workspace/id-generator/ && cp -R out/* /tmp/workspace/id-generator/
#        git add -f out
    - name: Run Flatbuf generator
      run: |
        cd flatbuf-generator
        python generate_schema.py
        wget -O flatc https://raw.githubusercontent.com/zabealbe/flatc-musl/main/versions/flatc_v1.12.0
        wget -O flatcc https://raw.githubusercontent.com/zabealbe/flatc-musl/main/versions/flatcc_v0.6.0
        chmod +x flatc
        chmod +x flatcc
        python compile_schema.py --flatc ./flatc --flatcc ./flatcc
        mkdir -p /tmp/workspace/flatbuf-generator/ && cp -R out/* /tmp/workspace/flatbuf-generator/
#        git add -f out
    - name: Run Includes generator
      run: |
        cd includes-generator
        python main.py
        mkdir -p /tmp/workspace/includes-generator/ && cp -R out/* /tmp/workspace/includes-generator/
#        git add -f out
    - uses: actions/checkout@v2
      with:
        ref: build
    - name: Download libraries
      run: |
          rm -rf ./flatcc
          wget -O /tmp/flatcc.tar.gz https://github.com/dvidelabs/flatcc/archive/v0.6.0.tar.gz
          mkdir /tmp/flatcc
          tar -C /tmp/flatcc -xvf /tmp/flatcc.zip -C flatcc-0.6.0/include
          cp -r /tmp/flatcc/flatcc-0.6.0/include/flatcc .

    - name: Push generated includes
      run: |
          git config --global user.name 'Automated CICD'
          git config --global user.email noreply@noone.com
          cp -r /tmp/workspace/* .
          git add .
          git commit -am "Automatically generated files"
          git push
