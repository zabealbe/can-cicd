#include <string.h>
#include <assert.h>
#include <stdio.h>

#include "{{ filename }}.h"

{% for struct in structs -%}
/* {{ struct.name }} */
void serialize_{{ struct.name }}({{ ", ".join(parameters(struct)) }}, uint8_t* buffer, size_t buf_len) {
    {{ struct.name }} {{ struct.name.lower() }} = { {{ ", ".join(fill_padding(struct)) }} };
	assert(buf_len >= sizeof({{ struct.name }}));
	memcpy(buffer, &{{ struct.name.lower() }}, sizeof({{ struct.name }}));
} 
void deserialize_{{ struct.name }}(uint8_t* buffer, size_t buf_len, {{ struct.name }}* {{ struct.name.lower() }}) {
	assert(buf_len >= sizeof({{ struct.name }}));
	memcpy({{ struct.name.lower() }}, buffer, sizeof({{ struct.name }}));
}
{% endfor -%}
